<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.083xh6b1jnluhu19oxely1kv58mb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0b38rtp0zyss0f10dcp8j07745n1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Tableau/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0b38rtp0zyss0f10dcp8j07745n1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='tot_cases' ordinal='0' />
            <column datatype='integer' name='tot_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0b38rtp0zyss0f10dcp8j07745n1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='tot_cases' ordinal='0' />
            <column datatype='integer' name='tot_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tot_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_675BCD49CE8E498E9192DD803962B255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tot_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_675BCD49CE8E498E9192DD803962B255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_675BCD49CE8E498E9192DD803962B255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_675BCD49CE8E498E9192DD803962B255]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Tot Cases' datatype='integer' name='[tot_cases]' role='measure' type='quantitative' />
      <column caption='Tot Deaths' datatype='integer' name='[tot_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/USER/AppData/Local/Temp/TableauTemp/#TableauTemp_1oq43km1ufzx8q173b2th0w5thgc.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/26/2024 03:17:57 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>tot_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tot_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tot_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_675BCD49CE8E498E9192DD803962B255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tot_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tot_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tot_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_675BCD49CE8E498E9192DD803962B255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_percentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_675BCD49CE8E498E9192DD803962B255]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_675BCD49CE8E498E9192DD803962B255'>
            <properties context=''>
              <relation connection='excel-direct.0b38rtp0zyss0f10dcp8j07745n1' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='tot_cases' ordinal='0' />
                  <column datatype='integer' name='tot_deaths' ordinal='1' />
                  <column datatype='real' name='death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.15l7c7x1wo0vgg13nf8nx16rowpe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1khgfn70tbgkpu18ia67x04sb0lc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Tableau/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1khgfn70tbgkpu18ia67x04sb0lc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1khgfn70tbgkpu18ia67x04sb0lc' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BAE2924687B411FA2E6E6B0EECA2D31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_death_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BAE2924687B411FA2E6E6B0EECA2D31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_7BAE2924687B411FA2E6E6B0EECA2D31]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/USER/AppData/Local/Temp/TableauTemp/#TableauTemp_15lejd40tb2jph13cqgro06g5e84.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/26/2024 03:18:43 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BAE2924687B411FA2E6E6B0EECA2D31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_death_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_death_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_death_count</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_7BAE2924687B411FA2E6E6B0EECA2D31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='green_10_0' type='palette'>
            <map to='#61a956'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#67af5c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#6eb663'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#75bc69'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_7BAE2924687B411FA2E6E6B0EECA2D31'>
            <properties context=''>
              <relation connection='excel-direct.1khgfn70tbgkpu18ia67x04sb0lc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_death_count' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.10sb72f0ge8pmn13sevgy0xr1j64' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1p8udmb0dkk82712q8rxr067eytz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Tableau/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1p8udmb0dkk82712q8rxr067eytz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='case_percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1p8udmb0dkk82712q8rxr067eytz' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='case_percentage' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[case_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>case_percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]' role='measure' type='quantitative' />
      <column caption='Case Percentage' datatype='real' name='[case_percentage]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/USER/AppData/Local/Temp/TableauTemp/#TableauTemp_0uhlyjk0vqwdk914ca5k00p62hbo.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/26/2024 03:19:15 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>case_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[case_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>case_percentage</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_F4B3BE4C579242319BD1F72C44F6B86C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_F4B3BE4C579242319BD1F72C44F6B86C'>
            <properties context=''>
              <relation connection='excel-direct.1p8udmb0dkk82712q8rxr067eytz' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='highest_infection_count' ordinal='2' />
                  <column datatype='real' name='case_percentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1suri0e1mmh8rl1bp30bz0velpwp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1gqcyp11a3kxjv14o0r300dqc3um'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Tableau/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1gqcyp11a3kxjv14o0r300dqc3um' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='real_date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='case_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1gqcyp11a3kxjv14o0r300dqc3um' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='real_date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='case_percentage' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>real_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[real_date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>real_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[case_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>case_percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_956BFB4E50E642BE850275DBF6175A69]' role='measure' type='quantitative' />
      <column caption='Case Percentage' datatype='real' name='[case_percentage]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Real Date' datatype='date' name='[real_date]' role='dimension' type='ordinal' />
      <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/USER/AppData/Local/Temp/TableauTemp/#TableauTemp_0nlqva00w671zl1euaswr1t5cnc8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/26/2024 03:20:12 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>real_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[real_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>real_date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1206</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>case_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[case_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>case_percentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_956BFB4E50E642BE850275DBF6175A69]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_956BFB4E50E642BE850275DBF6175A69'>
            <properties context=''>
              <relation connection='excel-direct.1gqcyp11a3kxjv14o0r300dqc3um' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='real_date' ordinal='2' />
                  <column datatype='integer' name='highest_infection_count' ordinal='3' />
                  <column datatype='real' name='case_percentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.083xh6b1jnluhu19oxely1kv58mb' />
          </datasources>
          <datasource-dependencies datasource='federated.083xh6b1jnluhu19oxely1kv58mb'>
            <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[death_percentage]' derivation='Sum' name='[sum:death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tot_cases]' derivation='Sum' name='[sum:tot_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tot_deaths]' derivation='Sum' name='[sum:tot_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Tot Cases' datatype='integer' name='[tot_cases]' role='measure' type='quantitative' />
            <column caption='Tot Deaths' datatype='integer' name='[tot_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.083xh6b1jnluhu19oxely1kv58mb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.083xh6b1jnluhu19oxely1kv58mb].[sum:death_percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.083xh6b1jnluhu19oxely1kv58mb].[sum:tot_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.083xh6b1jnluhu19oxely1kv58mb].[sum:tot_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.083xh6b1jnluhu19oxely1kv58mb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.083xh6b1jnluhu19oxely1kv58mb].[sum:tot_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.083xh6b1jnluhu19oxely1kv58mb].[sum:tot_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.083xh6b1jnluhu19oxely1kv58mb].[sum:death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.083xh6b1jnluhu19oxely1kv58mb].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.083xh6b1jnluhu19oxely1kv58mb].[:Measure Names]' value='121' />
            <format attr='height' value='36' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.083xh6b1jnluhu19oxely1kv58mb].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.083xh6b1jnluhu19oxely1kv58mb].[sum:death_percentage:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#2e8b00' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.083xh6b1jnluhu19oxely1kv58mb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.066298246383667' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.083xh6b1jnluhu19oxely1kv58mb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C2115168-49B4-4E5B-832A-ABACCA936BAD}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.15l7c7x1wo0vgg13nf8nx16rowpe' />
          </datasources>
          <datasource-dependencies datasource='federated.15l7c7x1wo0vgg13nf8nx16rowpe'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death_count]' derivation='Sum' name='[sum:total_death_count:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]' value='92' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[sum:total_death_count:qk]</rows>
        <cols>[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{C282A0FF-730C-44AF-BC01-F2F488D61D56}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.10sb72f0ge8pmn13sevgy0xr1j64' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10sb72f0ge8pmn13sevgy0xr1j64'>
            <column caption='Case Percentage' datatype='real' name='[case_percentage]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[case_percentage]' derivation='Sum' name='[sum:case_percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[Longitude (generated)]' field-type='quantitative' max='28100165.04383954' min='-26323079.507470246' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[Latitude (generated)]' field-type='quantitative' max='16755669.725193487' min='-7234984.2809543442' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[sum:case_percentage:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[sum:case_percentage:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[none:location:nk]' />
              <color column='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[sum:case_percentage:qk]' />
              <geometry column='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10sb72f0ge8pmn13sevgy0xr1j64].[Latitude (generated)]</rows>
        <cols>[federated.10sb72f0ge8pmn13sevgy0xr1j64].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{396AD1EA-86F5-458F-8C81-F54EC0A12617}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1suri0e1mmh8rl1bp30bz0velpwp' />
          </datasources>
          <datasource-dependencies datasource='federated.1suri0e1mmh8rl1bp30bz0velpwp'>
            <column-instance column='[case_percentage]' derivation='Avg' name='[avg:case_percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Case Percentage' datatype='real' name='[case_percentage]' role='measure' type='quantitative' />
            <column-instance column='[case_percentage]' derivation='Avg' forecast-column-base='[avg:case_percentage:qk]' forecast-column-type='forecast-value' name='[fVal:avg:case_percentage:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Real Date' datatype='date' name='[real_date]' role='dimension' type='ordinal' />
            <column-instance column='[real_date]' derivation='Month-Trunc' name='[tmn:real_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[tmn:real_date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]' />
              <text column='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]' />
              <color column='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:Forecast Indicator:nk]' />
              <text column='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[fVal:avg:case_percentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1suri0e1mmh8rl1bp30bz0velpwp].[fVal:avg:case_percentage:qk]</rows>
        <cols>[federated.1suri0e1mmh8rl1bp30bz0velpwp].[tmn:real_date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{E86E3110-FCB3-45C7-87C5-3CC124F1BD22}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97102' id='8' param='horz' type-v2='layout-flow' w='98636' x='682' y='1449'>
            <zone h='97102' id='6' type-v2='layout-basic' w='84996' x='682' y='1449'>
              <zone h='48551' id='12' name='Sheet 4' w='84996' x='682' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48551' id='14' name='Sheet 3' w='42498' x='43180' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24276' id='16' name='Sheet 1' w='42498' x='682' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24275' id='17' name='Sheet 2' w='42498' x='682' y='25725'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97102' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='13640' x='85678' y='1449'>
              <zone h='40942' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]&#10;[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:Forecast Indicator:nk]' type-v2='color' w='13640' x='85678' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8514' id='15' name='Sheet 3' pane-specification-id='0' param='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[sum:case_percentage:qk]' show-title='false' type-v2='color' w='13640' x='85678' y='42391'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26449' id='18' name='Sheet 2' pane-specification-id='0' param='[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]' type-v2='color' w='13640' x='85678' y='50905'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97102' id='21' param='vert' type-v2='layout-flow' w='98636' x='682' y='1449'>
                <zone fixed-size='186' h='24276' id='16' is-fixed='true' name='Sheet 1' w='42498' x='682' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48551' id='14' is-fixed='true' name='Sheet 3' w='42498' x='43180' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8514' id='15' name='Sheet 3' pane-specification-id='0' param='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[sum:case_percentage:qk]' show-title='false' type-v2='color' w='13640' x='85678' y='42391'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='186' h='24275' id='17' is-fixed='true' name='Sheet 2' w='42498' x='682' y='25725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='26449' id='18' name='Sheet 2' pane-specification-id='0' param='[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]' type-v2='color' w='13640' x='85678' y='50905'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48551' id='12' is-fixed='true' name='Sheet 4' w='84996' x='682' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40942' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]&#10;[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:Forecast Indicator:nk]' type-v2='color' w='13640' x='85678' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{836E9A16-D66F-48C0-865C-60F3F73F42E3}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.083xh6b1jnluhu19oxely1kv58mb].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0FC489D-092B-4297-8EA9-920B9A47EB4D}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8B7892B-AB30-411C-82B7-C9AAD3E8CE30}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10sb72f0ge8pmn13sevgy0xr1j64].[sum:case_percentage:qk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10sb72f0ge8pmn13sevgy0xr1j64].[sum:case_percentage:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BFF01467-ADC9-42F8-83AA-2E95B55E08E0}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]&#10;[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:Forecast Indicator:nk]</field>
            <field>[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]</field>
            <field>[federated.1suri0e1mmh8rl1bp30bz0velpwp].[yr:real_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9500FC4B-A819-4DB2-A1FB-A5BE95BEF72B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.15l7c7x1wo0vgg13nf8nx16rowpe].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:Forecast Indicator:nk]</field>
              <field>[federated.1suri0e1mmh8rl1bp30bz0velpwp].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F5A40529-A0DD-4E69-B6C9-F12BD0B32EA3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WXAdV5rn98vMm3ffF+wAQXARF5AUJUqiJFKUqkpiVXd1T3XP2DEz4XCE
      HRMT4Qg/2o926GEi7Bc7JuxxeInpdpdnumumu6qmxCrtS4mUuIokSALEQuw7cAHcfc3t+OGS
      ICmQAkiCC4j8RZD34mbmye9knv9Zv3OOJIQQ2NhsUuSnbYCNzdPEFoDNpsYWgM2mxhaAzabG
      FoDNpsYWgM2mxhaAzaZmTQLQi2kWc+UVv1dzSVJF4weurDI3m3pY2+6imF4iV9bWJSwbm1us
      EICwdE5/9TEfffwJH334B4YmUxTmB7k+vrji4ux4F/3z1R8IPsuFs/3Lf3327/53/uqDbwCY
      uvoZXVOlNRs6O3CdiVRxzefbbC4+/81f8w8ffMTvP/gNf7zQt+brHN//ITXRR9Hdxp/8aC8A
      Qggyo7VjRrXA+TPnKBoyB145jAQMXb9IbqDIjgOH2RJzceHcOfIVkxcOvEJ7w91hu8OtRCrT
      jCwUUS0TS0BvXw/bd+zBKswxuGQR1OaYSBvk0ikaGutZmJ1l58tHAZOBa5eYumaw6+BrbKnz
      c/HMtywVTV5+/QikpslYgrmZDHtfqOO7S304fFHePvoKysM+VZuNg8PDsR+9S8Iv+Pu//z3G
      /mZOnz5PFTdH3nqT2aFuhOIkU1XY0xrm7HddCE98ZQmQXkgSTNSRnRvj09/8kt99M7B87OqZ
      r4ntPMTbb7zIt1+fAqBp6x7e/ck7dJ0+ieVw0t6xna0tCU6ePHMPKyVef/stTn/1R6ybv4yP
      jWJaAi2/xPD0AgvTIyS27ufQFjejBR/vvneIa2d7AInW7Xv4yTtv8N2Zb5noOkk1tpsfv/US
      3576huzcKGd7Jjj06kFGLl8i0LqTVw7sRlr/R23zDGIZVcZGR7jedZFAXRtnv/qCLQff5PU9
      EU6e7Wf0+kUmsjIH927nj199zUtvvsPRVzpXCiBaV0dqbpZQQzvHj75EoawvHyuXNSLhAKrH
      j2zV6uNerxfF4cIlScyP9nJpYBJZdaLcx8XIHWpkT1yna/h2lerOM2XZgc/nRVEc+Hw+FFVF
      FhYg4/V6UJweFMkkm0oz3NfFV6e+wxcMIXDy0ssH8TgVXnz7PSJmhk9O/Ib5grXCBpvnl0Dd
      Vo4fO8RSJk3PhW84c22ckF/B6Y9wsHMniizQcRD0OHG5XCurQJHWPYSHPuXEH6ZQjQLbdryJ
      rCRRHTK7Dx7gj5+cwOVSaN21H1maYujqKVI9VeI79uJ16hRSSSakEkJ2ADJOl7octupyIkkS
      Lx75Caf+p/fpeP2fsDUe4JNPP8NZXURqOIjD6UKRQHaoOFUZkHC6nDi8Fr0XTjMma7TsfImd
      LSpDX1wAvISjURzVRUy5lt9PjN5gfGYeIak4VsTQ5nnE7QvR0bGNuL/2wt98/TCnro2gepxE
      IyEyWReSJAEKB19o4w8ffojTF0OyvUFtNjP2OIDNpsYWgM2mxhaAzabGFoDNpmZFH8l/8+uf
      Mp6+8TRssXmK/MvX/wd+0flfPW0zHgpN0zAM42Yvz4OxQgDJwjTT2dF1Mcxm41Cs5p62CQ+N
      EAKXy4WiPPiY/5OpAlky0kgCuS8B2s1bCiDrqX03HUhDdUjz/idizgqyXuSrzZB13/HbTdtw
      IHc3IA8lwLhHDpPzgAXSVGTt99PcyNfrkYdjd48C3iLjAQHSVPj2b8kw8lACada39vvAHfGw
      uRdPZphIthCJEpQElHxIk27wVZEnI5h7pqEYhFgaEdFhPoycVbGiVaScExEtIS/6EcFSLbHF
      8ohIZX3tC5UQPj84QRpKgLeKNBNFbJtFRAR4KlgRkGZDUHFCqAiGE6kkIypepEgG8l4YckCk
      gpRyYbVkwHMfT1lLRoQKIHxI8wHIeyCeh7wXyRSQDiBaF5GyfiiqiO0LSIaCSBSQkn4Y9yCZ
      FsIpgaKB7gK1CroTSZcQbgt0GZwa8lQU84V5pCU/eMtQdSNVFax4HjnlR0SziOgPOTQ+3zzx
      RrCUcSMackhlByJSBq8BLgOKLtBV5JQH8h4k2QLdiTwbBsyapQ4JKed6fLYVPBArIJWcEC4h
      wrcThlRSoeJGMgQgIWU9SFkv+CtY8SJC1REhvVbCSQ6k4ip5i5CgrEDOh6QYYKhIRRVyHkSw
      goiWwF0F181zhYSUcmM15pFSHoTTrD3DhjxSVUbUVZCSPoTLgIoD0VAATSCiZTCdSIaMlPIj
      aQLhBnkhAJKB2OTdIE/OUcBdQahATEOa82G1piHrh5IDQjmEEUDKObASBSRLIJwGkrdUe+Fz
      AYRLR9I0rMDKeQnrgajPgk9DmgtiNadrOXzWhQjrtZzWl0c0azAbRLh1iBUQcRMR0pDSntr1
      qoUwFDAkRPAH5i6oVbCCiIYl8JowG0D4ymAALh3hsZDSHqy6HEiALBDRHELVwSGwtqSRNLAa
      MyCB1VBAWnJibV9CKsuIuiyoBiJuIKqAQ0MEQHgrSPMx5FkV8+AU0nwQVPOxPM+NwpMTgGrC
      Tbcg0ZKtfYnlbx+P5Zerw8uf/srN8zO1z8BjLKpvhi2abtpG+bYdbenl00TzTVuCt20R9bcd
      BkFftvu+KCZiyx1htt4M03s7HPH9qrvnDkFFC3c3HQIlRODmdXc0G/AD/vxd9gr/LCaAIhCt
      aTY7KwTw3+74X8k1Pvs9AkPDQ2zftv1pm7EqG8XOzviBp23CU2GFABTThcNw3+vcZ4r5sSV2
      bel82masykaxU7Y257ShTd4Estns2AKw2dQ8sAA0TWN4eBiATCbD119/zcWLFzFNk6WlJebn
      5+8699y5c3R1dWGaJpOTk5w/fx5N0yiVSpw+fZrx8XFuTUno7+/n5MmTnDp1imq1yvnz5zl5
      8iS5XG752mr10RrChmFw6dIlLly4gK7XGp1CCLLZLLOzs1iWRU9Pz3KcMpkMp0+fplgsLp+7
      uLjIN998w8LCArqu891339Hb24uu61y+fPmusJ9FhBCMjo5y+vRpKpV1HlPZYDyQAIQQ3Lhx
      g/7+2koPQ0NDHD58mEOHDqFpGr29vUxPTy+fr+s6+/fvx+l00tvby/j4ODt27ODChQucPXuW
      l19+maGhoeXEsmvXLo4ePYplWRiGgaqqHDt2DIfDwcjICDt37uTChQuPFGHTNNmxYwctLS10
      d3cv29nX18fExAQzMzOYpklTUxM9PT2cP3+eF198kXPnziGEqC0SkMlw+PBhurq6SCaT7Nq1
      i3w+z+LiItu3b78r7GcRTav1KL300kucO3fuKVvzdHkgAUiSRGdnJ35/zWWhvr6eCxcucPr0
      aWRZZt++fXf5Y/h8PtxuN9PT00QiEfx+P/39/VQqFTweD5VKZfll3KK/v5+dO3ficDgoFApc
      uHCByclJgsEg/f39lMuPNg7gcrnw+/2MjIwQjUYBcDqdHDhwAIfDgdPpRNd1crkcbrcbp9OJ
      z+fD4XAghECWZfx+Pzdu3GDfvn3U19fT19dHQ0MD9fX1+P1+xsbGCIfDq1jy9HA6nVSrVaan
      pzl48ODTNuep8kACME1zOScfHh6mXC4TCAQoFAoUi0WuX7/O8PAwi4uLXLlyhWQySVdXFy6X
      C13XUVUVSZJoa2tDCMHIyAhCCHK5HENDQ1QqFVKpFI2NjVQqFdxuN8ViEa/Xi9NZm0/c3t7+
      SBHOZDJcvnx5WWBXr14ln8/T09PD2NgY+XyefD5POp1e9jA8f/48TqeTiYkJFhcXOXXqFJqm
      USgUOHv2LLquk81mWVhY4PLly0iSRKm09jWPnjT5fJ4rV65QKBSeaTufBCvmBJ86dYp8Pn/P
      k4UQ5PN5LMvC4XDg8XgoFAp4PB4kSVquJ0uSxPz8PNu3byefz6MoCj6fj1KphBACn8+HZVkU
      CgVcLhdzc3NEo1H8fj+maaKqKkIIisUikiTh9Xopl8tYloXP50OSJE6ePMmxY8ceOMKWZS3b
      6fV66evrY9euXRQKBQACgQCVSgXLspbtKRaLBAKB5dKpXC5jmiaKoqCq6nI92u/3L5dQfr//
      kex8nFiWRS5XG+txuVx4PB727NnD1q1bn7JlD0e1WsXhcDyUN+gDjQRLkkQwGLzrt1AotPz9
      zmL/1u93Hvf5bnsyKoqyfOzOXF2W5eV73apqQS2xrgeyLBMIBJb/7uzsXGH7nXY6HI5lO/fs
      2QNw1/UAbvftcZPvH3sWkWX5ma6iPUnsblCbTY0tAJtNzYoqUFtb24qemWeRRCKxIYrxjWLn
      RrDxcWAvjGWz4XmURrBdBbLZ1NgCsNnU2AKw2dTYArDZ1NgCsNnU2AKw2dTYArDZ1NgCsNnU
      2AKw2dTYArDZ1NgCsNnU2AKw2dTYArDZ1NgCsNnU2AKw2dSsmBBz49oFRmdvrRrs4djxt1jr
      SqFGYZHL41le3bsNgMnBbnpHZgjXt3Fo/y4Uee17OJl6jq7uCQ69tP7rahbTc5y/2E3Tjk52
      tTeue/g2G4cVJcDO/a/y1uE9SM4Ix++R+PV8khNfnblnYJZeZn4ps/z3dxeuceT4cbZGLP7D
      bz7GWHXqjcaJD35fC8vUSCaXHiQua6KQHOXEH7t4850fEXSu7ZoPTvy29sXS6B8Yfqj7nvjg
      BM/uWnGbl1VXhSinJjjxxXcEvCqeRAcN0hw9V/rwyArvvLmbrz4/jSmquGLbOfJC6J5h1G3Z
      S1v/DWZTeW6c+4Kq7ESTg/zi+BHOfvUx2SpU5ACv7QzT09OD2+fjpUN7GR/o5nO5QjJd5h//
      2TFOnPiUYDhEx55D7GxLAPBv/+9/TfvWXSRTBX72j/6c/jOfs1SVKWkyf/mL4/z2V39NIJhg
      9yvHaK8L0nf1Eq+89ee4HApNTY0r4tcZq/LBmVFaEx6KBDi0LURPz3Xc/gRHjxxguH+cjpYo
      f/O3v6KjfRszqSL//D/7OX/88PfoihvTFeEnr7bx7//uE9o7WklmNd59fQ89PT043D5efeNN
      4oFnf/XtzcKqbYArF7o58ic/50/+9M8oTQ3Runs/nS++zLtvv4aMgtfjRHa4GbzR84PhKLJM
      cWmSsbRGa0sbmaE+UqaF2+NDkhWmBgaJbH2Bzs5O3vvJjwi5Fdp27uPd947TELDQLQVZlvH4
      w0TDt5dLiTa08+P3fsrRPXUMDgxybSzNltYWnJkhRlIm+ZLBj47/Ke11teVcTMPEccfUue/H
      r2zB7oOvcfz4e8iVAm07D9DZuZfjPzqK16lgmiYIQXPHbn7y3nHqghLl5AhDWYXWtjayIz0s
      VQVtO/fz7nvHibp1wo3b6Ozs5N3jP7YT/zPGqgKIhlxMzaTQq3nKQkaVJLRKFcuymLn2NUbD
      ixx5/VX87vvPxyxm55nOCFrqojhkhVA4wuFjR/FkhuhNeXn7rTdJhLwIJAxdw7QsBII7t321
      JCc/Pv5TOrfG+OyL08u/m5aJsEwm59JE4hG8Dhl/KMzew8do8EpEEvW4HLejuW3XLq5euohh
      WeTz+ZXxQ+LWbW996ppes+mO6dN37kmruP24ZAiFI7xy9Ch+Bb6/Za2laxiGhWVPwX6mUN5/
      //3373VAUlzEIkFizS3MD16jb3iaQ2+8STgYxMzNcn0kyZ4XDzJ67RyZMtTXxWmqrwfFSTxS
      y20tLcu17n7ml4q88dZbhIIhYm6L/huj4ArSsnUbpZl+JhfyJOrqaG5pxi9rXLzWT11TG06H
      SjwWQVgW4XCYGz1dDE+lOHjoZcL+2h5C505+xlIqT7htD7s72miKuenrv4GGi9aWZmQs6hKJ
      5Xj5wnW4jTQXL1+jZKnsO3jgrvgF3CqqJ0DI78ISkEjEUc0yl/vHaW5uRpEUEnURkBXi0QiW
      JYg3dhBzawwMjiK7QzQ1xFFuPj8hLGLxOiIeuHCxh2hDE17nk9uZajNgmiayLC8vqvYgbPhV
      IT785GP+9Kc/e9pm2DxFHmVViA0vABsbe1kUG5uHxBaAzabGFoDNpsYWgM2mxhbAU8CoFhkd
      HUcz7f6Hp43dIf2kEQaf/eFDWvfsp1yusJTPEkvEKWUz6DhIDl8k73uB/c0SpuSjWDGpi4dY
      WFgiFI1SLuTQhcLEd9/g3neEzubo047RhsYWwJPGKFMQAfbt3sXFrz9B8/i53NfN0tASbrdJ
      OKagaY2Y7iU+PDOBagiiHTFOf3ORPQcOk8kXkPUyCaVMIFcEWwCPhF0FetKoPpoCGn/4+DOq
      wsHcXBK310+svpnmeIjmtq3k00sIWcEfTtDRXI/T42PbrgPs7mgg1tBCYyzMlu2tLD0Gb9nN
      hj0QZrPheaoDYYV8DusBJXRrw2kbm6fNI7cBisU8Hl/wtuvkKpimiRACy7KWnZd+dfWXGJbx
      qKbwF3v/c/zOZ3+XRpv1weF49CbsKiFY5LN5LAAkfAE/ju953BUKeWJ1a7+hLMvLuf8tAZwe
      O4lmVtceyH34013/CFm+96QcG5t7sYoANLrOnaO29bPKq0ePEPHW5hGWl8b5+NQV/LEG2jvW
      fsNbfvSSJD2U++pqYd8rzJncFIJHr3LV+xtxyHbH2fPEKm/TzVvH3+ZX/8f/Q8kXZb9RKwuq
      xSwDvVfx1u1gV3uUB5jr/lT4n0++vy4lzL96938h7nuA4s7mmWcNWbCJ1+NH13Sq1dq0bsvU
      0WU/IbfJ5NTUAzeCbWyeFVYtz01Do+PlYxxwlnCrtW4mp8fPyNVvSHp2Ew/5OfyKQNd0FIeK
      LEsIy0TTDRwOFSEsFMWBaRooinLXVMLnha9GP6V3ofuRwznccoRDTYfXwSKbtbKqAPq7zvLR
      F8Ps7NzOj7fuAkBR3fz5P/sXnL82gjsYIb8wRf/YDJ5gggO7O5gfvM5ICXZ2bOfCN1/w7s9+
      zh8/+5BDR39KNOB67JF60swX5hhc6n/kcHbGdq+DNTYPwqoC2PvKMXquL2Dk02RKGkF37ZLC
      /DBXR2ZJeJPUhw/QeeBlJkZvAOAKR1DSUyyls+xsr6e76xqRlg4kat2g1s0J5pZlrWtkDMNE
      1++1+s761NEMw7hn+OsVD8u07hn++9/+9+iW9sjh/3ev/o9E3LFHDudZQVXVRw5jDV0aKv6A
      hyoOPM7bI22hpp3UBzNsaWqgMR7lStcFEq07GB+fwC3rSJKMz+dDcbZSmp+jIZHAocgoSm15
      E8uyHmrk7gcj41Du81DWp9rlcDjuGf569WbJirwuL/V+3M/+zcwqAkhz8fwSP/uLv8QS3LWe
      Tm5+hKGpJKpk8cprr3L49TfA0skWfISCXupbt908M0hjU9Pji4GNzSOwigB0znz5GTPzLYCT
      N3/8DjFfrQ4faN7Le69C8/a9KLcyQFklFLRzGJuNwyoCCPBP/st/SlPL3S63heQIv/viIvXx
      ILOXr/Jn7721YiEoG5uNwCoC8NDU4lnxa3Kin/rt+2gNSnT3dGNY4Fzf6rzNE+TU5Of0p64/
      cjivNLzBwfpX18GiJ8dDjes37HiF/NgM1SrsPXAIxwO0Ae/0BL316VScrE9PjXRPL9PHHb5D
      VlDlNS41/QMokvID9q8P9wo/W80yX5x55LCLeuGJevmux5jSE58PcMsbVAjxWAfFHnf4d3qz
      2uE/nfCdzlrG8CjzAZ64Z5eiKMsCeFwP6HGHDzUhr3c3rh3+g4W/HjyVKZH389pcmJmgf2CQ
      svZokZMkCfQyS7kSWrGIdr+BKr1M+Y5xJ0uvspTJrekeiiyzODfJxEzyB4v9crl819/pxcU1
      bBTCqonHqBRI58s/eM7Dhp9NLaKZIIwK45MzPEwdYUX4QjA3NcbcYvbBA1tL+A/JM+Xbm8oX
      aGpqRREaFd2JpWtIQqeoCSS9iHAG8SgGqXSBhuYmMskZ1ECcsH/lmvtmfoaz/VUOJVSU9i3o
      ySTBRAOyWaGQSTM0uUBnq4+BQpBtjRGiQS/pxVn6J3McPrSXpfkZhOJCNwSNiTAzcwvUNzbh
      vNngscwqw+NztG9tx9AqzCaXqK9LICQZS68y0NdLoqWD/NI0/nADzU11SGaFocF+WuSXCDgq
      pHIVXLKJP9ZIJZtEcoeIBn1relZT4xNkhUpoWyuTM0kaEiGSBQu3WUK4AtRFgw/3EoTO2Mgg
      oSaZ6nQ/pXAzsVwaQ9fIW26CSoUKLhS9iKn6qY+tbf5FJjlJRnMgpYdxejopp+YIJ+pIzc+T
      aGohtzCD5AnjdVikMjkS9XFSS0VUyghXiEQ0uE7DmXdz3+XRnwbjQ70sZIq4rAJp009yZpLZ
      yTFCPoXxRZ3S4izpQgmfU2Z2ZoyLlwfIFKu0tzWueDhWOQNOH3PTC+hSBXAyOzPH4swYwXg9
      pbJGfcjBbMlFJbdAfSLOYH8/ClVwhVlIzrC0mELTNTKzY/TeGEJ44tSFbyZQSUE2iozNpqnm
      llA9CqND0xgOlYW5KSRJJp6oI7WYRNM1AsEYpdQsqaJOoaxTyi5gZTJoIR/p8XEud/czny7S
      0d6y6osWlsHg0AjFQpGA0+L68BSJsI+Fgs7ixA26h2fZs2PrQ72DcnaBqcUixVIZv8tBpKmJ
      we4r1MWCzKWzpDJFYuEAYzd6uTI4xd6da5sMkk4lCSda8KkaE0PTSIEQ2clBeodGqFoqS5ND
      9I8lkawyqlNQKEqUiiXmJ24wMDpHx7atKPd5MI+yPPoztSrErWF6xeVlvP8K+YpBXVMr8XgC
      Pb9AWTiQ9BJTs0kC0ToSiQiNDYl7hiXJKsFEC5KWwe/zsTA7hcPlId7YRl0sCtU8+YpFU1MT
      Ib8HrAqoPmLxOIVslnhdAw0NDcSjYQLBCLH6RmI+maVsgVRqCWHpLCymsYSFx+NkanKeYCzE
      7OgNFnJVYn4XE/NLRGJ1JOJRZCCXLxGvb0C2qviDUerr6qlrqMfr85OIR2lprCOzlKJcyFCo
      3r8aaGhF3L4gbXEPi7obl6iQr5iokokhuwivsRS5F7lMlmh9A6pk4QtFiIQCNLVtJejz4nL7
      oJJnfiGNKSlEQv7VA7xJNBpj4NpFBsYztLbFWJieRHF5CUfriIddmLKHSMCLNxSloT6BU5ZR
      VQlTqERCvnXy5lrJhlsVYnFxiXj8+XHosnl0qtXq5t0gw8bGsu7tRbsWbAHYbGqeqTaAjc2T
      xhaAzabGFoDNpsYWgM2mxhaAzaZmwwugWq0+ORdcISjms5Qqjz5B3dSr6PYOMU+dFQIoZab4
      /3757/jkk4858empdV30anZinLsGODMj/Ju/+hWffPwRH391BuMhbvbVV59R0Vc6u82NjVO5
      +X18+AYlfe0Odp9/+fk9f09PD/DRl6dZyBR+8PrU7Bi5VRaim+n5imszD+/MZrM+rPAFquTm
      mC15+fnxd9BGz7EY2IW7NMO35y4TqW/EYZVYTBeZHOzGFWkmPz/Mme+uEUo0ImtZvj19DjUY
      J+B2MDUzzVBPF/MFQVDV+Lu//hvm8mU8oZsObLkpBkp1/OOfHiE9dIVysAlHMcm35y7hj9Xj
      c6uMj/TRc+UamhogGvQwNTVDMBgkNTOK7owwOXqD9o4dFJdmOHP2PCXhJuI2+Pf/1//LTKWE
      6grjc0n4/SEwy1w48y2pqkJ9LMTU1CTp2TG6BqZoaW5AubnG45lzZziwbz9Tk9PMjvUxMJWm
      OR7gw1//PfOGi9aWVvxymVPfnMUXbcTvVskmJzl97hKqx80Xv/4b+ucqqC4vMZ/CmW9OUVH8
      xEI+DK3I+dPfMjg0SKj9IE0hew710+S+VSDL1JlaqhJTM3zwRRdH3niZLz76mEJ2jr//1T+g
      JrbhzA7w6cVpjh19DcUs8MHvv+TQG29w8YuPyWs6H544wdb9rzM3dBnNGWV/ZyfvvHuc9vrw
      9+6lkcyXcVUX+OT0dY4efZ1Tf/gdRRM+/exzXn7zKEPnvmQyU+DypcsAjF75lpk7MmIDlSNv
      /4jM4Bkmyz727+3knePH2dEap7f7IiXN5NMTv2PLvtdwZgY40zPFuZMfo3mb2BnIc25g/vtP
      gJMf/x5v024C+UkGlkwO7t3LS28eY2eTn//04VccefstTn16gvzSOB9+08uRo2/i9wY4sH8v
      b75znD0dTfzhP/2WFw4dYebat0ymcvz+tx+w7cXX6dzesm4v0ebhuac79HDPJT4XeXYf+zmR
      0gRzuRxfnzqDVilS0mHXS4fZ3hxj4sK37Dr0J6hOlXA1xfRSltMnT1LWCmQKJvVbthH1u/B4
      PYj7VG8Grp7jCynJgSPv4coP09K+C5fTw65GF7N5qG9qweN0smNLA0vp4n0j0nflLHnLTXJy
      nuDee9U/dDTZT2PYS3T3PkbOD6IG4uxoTZDWfVjFlfsTBOIttCaC6D4PReN2NUuvZEgvLPD1
      l3+kmNeYmhqhfe+LuJwuXE4XU3eEMZuc5eLprynmCsSWFhCeRuqCHqqu9ZvmaPPw3LME2Nb5
      Msffe5f2xiiuug62xbw0NDaya28nbkdtMghA057XGDzzMVevXmG67GJ3a5xEfSPbd+0l7Fk5
      YcHnU7jWdZmFzO2E/MKBw7z33o9prQsTbexgfvgyXVe66E072RKC1PwU16520TWepqMxhqjm
      uHLtKj03xu4IWbCYztHU1ITfU0tY0biTrnOXmVu6NcHFSV1A4tsLlzj97Tnad3Y+9ENzemO0
      tzVR39jE7n172bJtHzM9Z7l69SrjsykCoQi9Vy4wnUyzZ+cLROL1tG/fTUN9PU5tjvOXr3B9
      YGzV+9g8flb4AlmmTlkz8XluTzLRygUW0zn8oSh+t0JVF3jctYRWKeVJZYvE4gkUobOwmMLt
      CxIO+iiVy/i8XsrlEk6XB8nSSS4sEogk8LlVMDXyVQh4nXfcq8hiJkc0lsDtdPAf/8MvOfrW
      e0RicTwulUoxTzpXwu9z4/KFMKol3B4PerlAKlciGPSjOj2oskVyPok3FMOBgcvtRcJkcWEB
      hydIJOijWCzi8/kw9SqaUPA4awVivpAn4PdTLJbx+bzo1TJCcSEZVUzFiVtVMLXi/ToAAA8h
      SURBVLQyycUU3kCYkN+LXimxlMkRjiVwOyQWF5I4fWGCHgfJ5AKyy0ssEkIYVRYW03h8Xtze
      AK4HWVHAZt155p3hevuus2f33qdths1zyjMvABubx4ld/tpsamwB2GxqHpsA1mvdFhubx8lj
      E4DdtLDZCNhVIJtNjS0Am02NLQCbTY0tAJtNjS0Am03NmnaK//Dv/paL166SzFZWP93GZgOx
      htWhK0wMjjNVMUg0bX/8FtnYPEHWUAK4OXj0ReKRKJXi2tbOt7HZKKxBAEUWMiodCS/ffPkt
      tytBgmJ2ianZBYRlMDM1ReUB5t3a2DwLrEEAfhrjgtG0wWuvv8jyDFYhyOSL5GanGBwdoqRp
      DA6PP05bbWzWnTW0AXQGuwco+aLEjx1jeZ6XJOF3O6nE6nBYRRLN7UyM3sCyLCzLWt4Mz8bm
      WWYNAjDxevxkNZ1qVQdqM8WEZXL12lXc/jgtLQm6vjtDvHn7Xeu0OxzP1A5MNjYrWHVCjGlk
      6L2eIuAs4W7soCHsXVPAhmHYArB55lm1DdDfdZaPPvqIrqEpvG57JQOb54tVs+i9r7zD8HAG
      BOimuZZLbGw2DGvoBbLIFSpEImEc99umz8Zmg7KG7NzNq6+9jOwPosqPb+dvG5unwRpKgBJf
      /vZTRkdHmEn98KKwNjYbjTUIwMPul9pJporUR9a+L6yNzUZgDVWgMq7oC7wdl0nnywRctghs
      nh/W5AxXTA/zXf94bUlzG5vniDWUAAayK8J7R17H7bIbwTbPF2soASRmb3TzH3/zO+ZX2/bE
      xmaDsQYBaOQWq7Q2ximUbAHYPF+sQQA+Xj66h2zJoiUeePwW2dg8QVZpAxh88Ku/JUuAv/jL
      9/Co9hx6m+eLVVJ0jmLRTcAq8dXXp8mWH317UBubZ4nHtj+A7Q5tsxFYQ53G4IO/+SUXui4z
      l7H3tbV5vlhDFq0xMzbJZNWgoe2F2z8Li4mRQQw1RHPEQVf3AI3b9rLle1ug2tg8y6yhCmQy
      OTLEtb5x3v7Jj/F9bzBsZHgYh2wSa97GxPAgL7ywc3le8K2pkTY2zyprKAGKfPmbD5CatjOT
      KrCjMbTiDBlBpVzEFAqSJKEoNZHc+rSxeVZZgwACvPGzd8mULerunA8sLG70XmMpV2ZX534m
      hwdp27EbSbo9aebO7zY2zyJrEECeL379KbF9u2jctpuQ5+bKQJLMzr0vLp8VefHF+1xvY/Ps
      smolvVp18M6fH8OoVHGrdpXG5vlilRIgz9nT/Rz70es4FQelig4B15OxzMbmCbCKALzkF/r4
      6KMF0pkCP9958MlYZWPzhFhDN6hA13QcqvpAjVp7JNhmI7Cm+QCq00kuOctCzh4Jtnm+WNPa
      oNe+u0CmpFO3ZQeJoOfxW2Vj84RY0/4A45MFAorOt1/duT+Ajc3GQwhBqlTk8uQEf3XuzFpK
      gPvsD2Bjs0Eo6zrTmQzfTYzTNT3JYqFAxOtlb2Pj2vYHyOWqxGKNbN/egT0SYPOsoxkGi8Ui
      V2emuD47y0ByHktY7Gts5hf7DrAjkSDq9aHI8loEIOFyORgbGWbXvr14VLsNYPPsYJgmVdMg
      X6lyY2GerqlJBhcWyFUqbI3FONjcyl/sP0BzKIxbXVl/WVUApmHRsrWDbGkIsH17bJ4sQghM
      IdBNk3ylwnQ2w3w+x1QmQ7KQZz6fJ1MuUTUMtsUTvNzaxnu79tAeieJx3ns5fyEEQhgIy1xN
      ABn+9b/6N+w68hKmHKc+YC+MZfN4sISgoutkK2VmstlaQs/lmMpmSObzzBfyOGSZxmCIplCI
      llCYV9q20BwKE/f5ifv9yPcYpxKWSaU4Tyk3ST49RDE7Tik7QaU4T6U4v/pAWCY5ydkLF5iZ
      N/jFP/0FMd/aXCHsgbDNhWGaVA2Dsq5T0jUqukFRq1KoVslXq5S0KoWbf2fLFUpalZKuk69W
      KFRrvzsVhYDbTX0gSJ0/QFMoRH0gQEs4QmMwRNB97wxYq2SXE3mlOEcxM0YpP0UpO0G1tIBD
      9eP2N+CPbMcXasMTaMYXbsfjb1r7nGBhWSBJax4NtgWwsagaBiVNo1CtUtJrn/lKhZKuka9W
      KGk6JU2jqGlUdJ2yrpGrVqgaBoVqFcOyUGUFp0PB5XDgVBy4VRWvquJ1OvE6nYTcHvwuFyG3
      B7fqwO9yE3C58Lvc+JxOVEVBliQUWb4rN7dMHa2SolyYqyX07Dil/DTFzDjlwjSmUcXpDuP2
      1eHxN+ENtOANteINtuIJNKM4PMiyAyR5Rfq1J8U/R5iWhX5HTqyZBhVdp6BplLRazlvQqqSK
      RfLVKoVqhWylTLZcxrQEiiyjKrVE7HaoBN1uvE4nAZcbj6rid7nwqk7cqopHrR13OWoJ2e1w
      IEsSsiyhSDKyLOGQ5FVnBZpGBVMvYxplDKOMXslQyk1Szs9QzI5RKcxTLswiyQoO1YfLG8cb
      bFtO4L5gK05PHEVxIjtcSNK976ebOpYw0U0DS5iYlolu6usjACFMFpOLhGIJnI6aAbYA7sa0
      LCwhMC2r9k8IDMvEsgSmuPtY1TBqdWLDQDdNhGVSNTSqhkHFMChWb1UtKpQ1jaJWpljVKGhV
      DLO2WfmtHFSRZbyqikdVCLrc+F0uoj7fzZzXRdjtqeXAqoLjDgE4ZAUhSSAEpqiFKe74biEh
      LBOBwAKEZWDdiqtRrTVcqxkMrYhRzVKpZDAqWYxqBq1awKpmqVTSCKOKaepYlo4wNcxaokQo
      KoFgK053FG+wFUl24HJ4sSQF2dKQBFSNCg4EhlGtXWNUMCwd3dQxjCrC1DBMHd3SkSwDybKw
      hIkQFg7LxBTm+gggOTnEUsnEFE46d20FHk0AFc2ouV4/MQRCWFiWCcLCNKtYlolx80EiDAxD
      RzN0ZKGjGxoIA03XsCwNXa9iWjqGXsG0dHSjiqZrN19CrZogzApYJpYwkKxabmRYFrolkISO
      KQTCMjEsgYSJRO21GEhICCQEAjAlCZCwqPXJWTf/t5CwkFAQKLKC6lCRFQW3w4Epyaimjom0
      PPQvAEncdgWQLAMTCYcQWDfFowpxM7EYKAJkLKSb3x0IsAxUy0JBIFkGshAoCFQhAAknFoia
      nTIgIVAASdQ+ZQQyIAuBBCg3qyiKdHO0SVaQlJs9OYoK8s30dGdOrzhBVmrVG8cd7VPZUTt2
      K36yCsqt9CiBo9aeWJcsumoKtnTsYHLk9kbZ1WqVcrn8UNMif/PNDb65NrUepq0JgUBYOqZp
      LCe8B0fBwodYpavY+oFjCqz5/op4DjullZv1dPnJ+RusSwmQmZ/g+tAE0cYOdnc0AY9WApim
      RVkzHtUsG5tVsRvBNpuax5pCdV1/qCqQEOKhr4MHX43iUe5nX/ds3PNhr3tsJYAQAtM0H6oU
      eNhFtR5WAA9bWj2snQ973UaxEzaOrY9VAEKIDbE63EZZxW6j2Akbx9bHJgAbm43Asy/Rh0Av
      pRieSAIWfb29WPeReD6dZrmvSZiMD/bR3TdMpZjh8qXL5Cs6Yzeu0z0wQrmQ5nLXFfKPaXyi
      WMhS1X+okxQsQ2Og5wqD47Pkl2a5eKUHXdfo677C0Pgc2cUZuq72opmPmqcJFmfGuHT5KpV7
      dMZZhs4P3SKdSf9AHKr0d19hcGKO3OIMl672omkV+rq7GJqYI7swTde1XvT7vbR7MD3Sz6Wu
      axTW/G4s0ukcAMr777///prvtEHQSov0DC7SFNC4NLhIXUCmd3CckN/P3PQ4VUswNNBPuVhh
      anYS2RXE71JQ3H707CKzmQI7dmxlYnKahoYWKvlFUqk87R3NTM9mSUSD625zZmmeiiaQFZlc
      JkdqborBiSSJiJfr3b24Q1GcssAbjLC4MEc+X2Znq5/ReUFrWyOp5By5Yom2+jCLRYOw/1Hm
      bQj6+27Q3rEVp0NmoLcbyR1gfuwG00sFFoav0b+oEXMZ9A1N4XMrDPT3kUpnSRWq5BYnmJpd
      IhKLMtTbje7wUUrNkClZ+L1OfIFaHHL5CtsbXExmHbQ0N7CYnKdQLLGlMcBCViK8Ru/jVCrH
      tm3NDA9PImlZxudzBFwWV7tv4A+46e27QcDnoX9wkPRikpIpMTs8QDJXfT5LAJCoDzi4PFZk
      a6OfbDZLITnD6NQsOVOmlJylfc9+fKpMx65OcotzIClkFmYINrXjVmScqhMJSC/OEG1sx6Uq
      OF3OmlPgOiOEwDJN8rkl8qUys7Pz5CpQ53HQf6OXXKnIzNwSsgSzM7Ns2dqBrDhweVwIy2Ru
      YpLWju0oioLT6USYjzqGItG5bw9zYwP09fQynysxMzOFIfmIygU8iS107tlBz7Ueiqk5pubS
      NG5twRIeZLOM6g7yQkeM/vPnGF4sMz0zw+z8Eg11USQkZuem2bK1A0Vx4HI7EcJidnKa9o4O
      ZEVBdbqwHjAODtWNZBW41jNEanaanuEp9h3Yy2hfN6VihqmpORRZxRWJouVz+KINNCjl51MA
      iuqlYUsrQbdKOBhCVRS8oTDBQIDmhjrqm+oYuHoFwxnA63ISCvrBKDI5s8D46BDxWJiLl7qI
      1yeYGp9leGSUSCTAlcu91DXE193e9Pwk00sV6mNhxgf7wekiFovgDwVpaWpGcTgJBjyUi1mS
      yXmGRqaI+h2cvzJFU9hkJpVmdHSckE+le3CSROJRbRRMj49TNBxs6WjFozgIBoMszowyV1Kp
      j3kY6h+kpbUZpy9AKBjE5/ERj9WesVPS6emfpuPAfqIuCAWDNLW04pAlKqU087OLDI9OEfHL
      fNe7QMJdJZlaZGR0kpBXpXtgivqG6Nqt1QtcuniF+rYXaG2O4wuFaKuPcOXyNeKNrTicHkKh
      INFYjHDATyAYwCynGSvYjWCbNWNRKFTw+72rn7qBsAVgs6l5LqtANjZrxRaAzabGFoDNc4JF
      anEJU0Aus0RVN+97XrFYWv7LFoDNc0KBv/7f/k+mFjKc+Lt/y9XJHPlshopmUC4VyGRzXD7z
      DROLaT778Esy2TyCx+wNamPzJGltbWG4v5tQvJ7C9HU+7C6jmBp6IYmqqqQrOnsCdZTzaT77
      9T9w7L/4r+0SwOb5wRNtJDnQQ11LK7JDpVLIYkkKnmCMHVuaCPu9FAoF/JF6djTF0Ey7G9Rm
      k2OXADabGlsANpsaWwA2mxpbADabGlsANpsaWwA2mxpbADabmv8f6V/hQ/4jsUgAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='60' name='Sheet 1' width='192'>
      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
      IDA0/w9ZLvUji2Yg5gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
